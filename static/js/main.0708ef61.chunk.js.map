{"version":3,"sources":["Header.js","../../src/index.js","DeviceAnimation.js","Form.js","App.js","index.js"],"names":["href","initialState","mobile","tablet","desktop","breakpoints","resolution","debounceDelay","useState","setResolution","updateSize","width","window","currentResolution","sizeHandler","useDebouncedCallback","useEffect","useLayoutEffect","useResolution","id","console","log","className","setBreakpoints","onChange","value","title","prev","htmlFor","type","e","currentTarget","App","Header","DeviceAnimation","Form","ReactDOM","render","document","getElementById"],"mappings":"4MAEe,MACb,gCACE,qDACA,4BAAI,uBAAGA,KAAK,mDAAR,Y,uNCFR,IAAMC,EAAe,CAAEC,QAAF,EAAiBC,QAAjB,EAAgCC,SAAS,GCA/C,IAAEC,kBACf,MAAMC,EDCqB,SAAC,EAAD,QAGxB,IAFDD,MAAc,CAAED,QAAF,IAAgBD,OAAhB,IAA6BD,OAAQ,SAElD,IADDK,MAAgB,KACf,MACmCC,mBADnC,GACMF,EADN,KACkBG,EADlB,KAGKC,EAAa,WACf,IAAMC,EAAQC,OAAd,WACMC,EAAoB,EAAH,GAAvB,GACAA,SAA2BF,EAAQN,EAAnCQ,OACAA,UAA4BF,GAASN,EAArCQ,QACAA,SACIF,EAAQN,EAARM,SAA+BA,EAAQN,EAD3CQ,OAEAJ,MAGGK,EAAeC,YAAqBL,EAb1C,MAyBD,OAVAM,qBAAU,WACNN,MACD,CAFHM,IAIAC,2BAAgB,WAGZ,OAFAP,IACAE,oCACO,kBAAMA,oCAAN,MAHXK,IAMA,EC7BiBC,CAAcb,GAEjC,OACI,yBAAKc,GAAG,oBACLC,QAAQC,IAAIhB,GACZe,QAAQC,IAAIf,GACb,yCAAeA,EAAWF,QAAU,mBAAqBE,EAAWH,OAAS,0BAA4B,SAAzG,MACA,yBAAKgB,GAAG,SAASG,UAAWhB,EAAWF,QAAU,UAAYE,EAAWH,OAAS,SAAW,UAC1F,yBAAKmB,UAAU,cAEjB,wD,OCZO,IAAEjB,cAAakB,qBAE5B,MAAMC,EAAW,CAACC,EAAOC,KACvBH,EAAgBI,GAAD,YAAC,eAAcA,GAAf,IAAqB,CAACD,GAAQD,MAG/C,OACE,8BACE,yBAAKH,UAAU,cACb,2BAAOM,QAAQ,gBAAf,qBACA,2BAAOC,KAAK,OAAOV,GAAG,eAAeM,MAAOpB,EAAYH,OAAQsB,SAAWM,GAAMN,EAASM,EAAEC,cAAcN,MAAO,aAGnH,yBAAKH,UAAU,cACb,2BAAOM,QAAQ,gBAAf,qBACA,2BAAOC,KAAK,OAAOV,GAAG,eAAeM,MAAOpB,EAAYF,OAAQqB,SAAWM,GAAMN,EAASM,EAAEC,cAAcN,MAAO,aAGnH,yBAAKH,UAAU,cACb,2BAAOM,QAAQ,iBAAf,sBACA,2BAAOC,KAAK,OAAOV,GAAG,gBAAgBM,MAAOpB,EAAYD,QAASoB,SAAWM,GAAMN,EAASM,EAAEC,cAAcN,MAAO,gBCP5GO,MAVH,KAAO,MAAD,EACsBxB,mBAAS,CAACJ,QAAS,IAAKD,OAAQ,IAAKD,OAAQ,IADnE,mBACTG,EADS,KACIkB,EADJ,KAGhB,OAAO,6BACL,kBAACU,EAAD,MACA,kBAACC,EAAD,CAAiB7B,YAAaA,IAC9B,kBAAC8B,EAAD,CAAM9B,YAAaA,EAAakB,eAAgBA,MCLpDa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0708ef61.chunk.js","sourcesContent":["import React from 'react';\n\nexport default () =>\n  <header>\n    <h1>React hook resolution</h1>\n    <h2><a href=\"https://github.com/Keized/react-hook-resolution\">Github</a></h2>\n  </header>\n","import { useState, useLayoutEffect, useEffect } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\n\nconst initialState = { mobile: false, tablet: false, desktop: true };\n\nexport const useResolution = (\n    breakpoints = { desktop: 992, tablet: 768, mobile: 0 },\n    debounceDelay = 500\n) => {\n    const [resolution, setResolution] = useState(initialState);\n\n    const updateSize = () => {\n        const width = window.innerWidth;\n        const currentResolution = { ...initialState };\n        currentResolution.mobile = width < breakpoints.tablet;\n        currentResolution.desktop = width >= breakpoints.desktop;\n        currentResolution.tablet =\n            width < breakpoints.desktop && width > breakpoints.tablet;\n        setResolution(currentResolution);\n    };\n\n    const [sizeHandler] = useDebouncedCallback(updateSize, debounceDelay);\n\n    useEffect(() => {\n        updateSize();\n    }, [breakpoints]);\n\n    useLayoutEffect(() => {\n        updateSize();\n        window.addEventListener('resize', sizeHandler);\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n\n    return resolution;\n};\n","import React from 'react';\nimport { useResolution } from 'react-hook-resolution';\n\nexport default ({breakpoints}) => {\n  const resolution = useResolution(breakpoints);\n\n  return (\n      <div id=\"device-container\">\n        {console.log(breakpoints)}\n        {console.log(resolution)}\n        <h3>You're on {resolution.desktop ? 'desktop / laptop' : resolution.tablet ? 'tablet (or baby laptop)' : 'mobile'} !</h3>\n        <div id=\"device\" className={resolution.desktop ? 'desktop' : resolution.tablet ? 'tablet' : 'mobile'}>\n          <div className=\"keyboard\" />\n        </div>\n        <p>Try to resize your page</p>\n      </div>\n    )\n}\n","import React from 'react';\n\nexport default ({breakpoints, setBreakpoints}) => {\n\n  const onChange = (value, title) => {\n    setBreakpoints((prev) => ({...prev, [title]: value}))\n  }\n\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"mobile-input\">Mobile Breakpoint</label>\n        <input type=\"text\" id=\"mobile-input\" value={breakpoints.mobile} onChange={(e) => onChange(e.currentTarget.value, 'mobile')} />\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"tablet-input\">Tablet breakpoint</label>\n        <input type=\"text\" id=\"tablet-input\" value={breakpoints.tablet} onChange={(e) => onChange(e.currentTarget.value, 'tablet')} />\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"desktop-input\">Desktop breakpoint</label>\n        <input type=\"text\" id=\"desktop-input\" value={breakpoints.desktop} onChange={(e) => onChange(e.currentTarget.value, 'desktop')} />\n      </div>\n    </form>\n  )\n}\n","import React, { useState } from 'react';\nimport Header from './Header';\nimport DeviceAnimation from './DeviceAnimation';\nimport Form from './Form';\n\nconst App = () => {\n  const [breakpoints, setBreakpoints] = useState({desktop: 992, tablet: 768, mobile: 0 });\n\n  return <div>\n    <Header/>\n    <DeviceAnimation breakpoints={breakpoints}/>\n    <Form breakpoints={breakpoints} setBreakpoints={setBreakpoints} />\n  </div>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}